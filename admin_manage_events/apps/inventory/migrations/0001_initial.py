# Generated by Django 4.2 on 2025-06-15 08:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('events', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalInventoryItem',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre del producto o item como sillas', max_length=255, verbose_name='Nombre')),
                ('add_stock', models.IntegerField(default=0, help_text='Cambia el numero para añadir o quitar stock ejemplo -1 quita y 1 del stock', verbose_name='Añadir stock o quitar')),
                ('quantity_available', models.PositiveIntegerField(default=0, help_text='Cantidad disponible en stock', verbose_name='Cantidad Disponible')),
                ('quantity_sold', models.PositiveIntegerField(default=0, help_text='Cantidad vendida', verbose_name='Cantidad Vendida')),
                ('category', models.CharField(blank=True, help_text='Productos / Alimentos / Decoración / Sonido', max_length=255, null=True, verbose_name='Categoría')),
                ('price', models.PositiveIntegerField(default=0, help_text='Precio del item', verbose_name='Precio base')),
                ('price_category_sold', models.PositiveIntegerField(default=0, help_text='Precio de venta del item', verbose_name='Precio de Venta')),
                ('is_category_sold', models.BooleanField(default=False, help_text='Si el item se venderá o no', verbose_name='¿Se venderá?')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, help_text='Usuario que creó el item', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('event', models.ForeignKey(blank=True, db_constraint=False, help_text='Evento al que pertenece el item', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='events.event', verbose_name='Evento')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, help_text='Usuario que actualizó el item', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Actualizado por')),
            ],
            options={
                'verbose_name': 'historical Inventario de Evento',
                'verbose_name_plural': 'historical Inventarios de Eventos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre del producto o item como sillas', max_length=255, verbose_name='Nombre')),
                ('add_stock', models.IntegerField(default=0, help_text='Cambia el numero para añadir o quitar stock ejemplo -1 quita y 1 del stock', verbose_name='Añadir stock o quitar')),
                ('quantity_available', models.PositiveIntegerField(default=0, help_text='Cantidad disponible en stock', verbose_name='Cantidad Disponible')),
                ('quantity_sold', models.PositiveIntegerField(default=0, help_text='Cantidad vendida', verbose_name='Cantidad Vendida')),
                ('category', models.CharField(blank=True, help_text='Productos / Alimentos / Decoración / Sonido', max_length=255, null=True, verbose_name='Categoría')),
                ('price', models.PositiveIntegerField(default=0, help_text='Precio del item', verbose_name='Precio base')),
                ('price_category_sold', models.PositiveIntegerField(default=0, help_text='Precio de venta del item', verbose_name='Precio de Venta')),
                ('is_category_sold', models.BooleanField(default=False, help_text='Si el item se venderá o no', verbose_name='¿Se venderá?')),
                ('created_by', models.ForeignKey(editable=False, help_text='Usuario que creó el item', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_items_created', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('event', models.ForeignKey(help_text='Evento al que pertenece el item', on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to='events.event', verbose_name='Evento')),
                ('updated_by', models.ForeignKey(editable=False, help_text='Usuario que actualizó el item', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_items_updated', to=settings.AUTH_USER_MODEL, verbose_name='Actualizado por')),
            ],
            options={
                'verbose_name': 'Inventario de Evento',
                'verbose_name_plural': 'Inventarios de Eventos',
                'unique_together': {('event', 'name')},
            },
        ),
    ]
